---
name: CI
on:
  push:
    branches: [ci-cd-rauc]
    tags:
      - '*'
  pull_request:
    branches: [ci-cd-rauc]

jobs:
  build:
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 600
    container:
      image: dynamicdevices/yocto-ci-build:latest
      options: --privileged --platform linux/amd64  -v /dev/net/tun:/dev/net/tun -v /dev/kvm:/dev/kvm
    strategy:
      matrix:
        branch: [kirkstone]
        arch: [x86-64]
    env:
      name: build-and-test
      ARCH: ${{ matrix.arch }}
      BRANCH: ${{ matrix.branch }}
    steps:
      - uses: actions/checkout@v3
        with:
          clean: false
          fetch-depth: 0

      - name: Update repo poky
        run: |
          if [ ! -d ${BRANCH}/poky ]; then
            git clone git://git.yoctoproject.org/poky -b ${BRANCH} ${BRANCH}/poky
          else
            cd ${BRANCH}/poky
            git pull origin ${BRANCH}
            cd ../..
          fi
      - name: Update repo meta-openembedded
        run: |
          if [ ! -d ${BRANCH}/meta-openembedded ]; then
            git clone https://github.com/openembedded/meta-openembedded.git -b ${BRANCH} ${BRANCH}/meta-openembedded
          else
            cd ${BRANCH}/meta-openembedded
            git pull origin ${BRANCH}
            cd ../..
          fi
      - name: Update repo meta-qbee
        run: |
          if [ ! -d ${BRANCH}/meta-qbee ]; then
            git clone https://github.com/qbee-io/meta-qbee.git -b ${BRANCH} ${BRANCH}/meta-qbee
          else
            cd ${BRANCH}/meta-qbee
            git pull origin ${BRANCH}
            cd ../..
          fi
      - name: Update repo meta-rauc
        run: |
          if [ ! -d ${BRANCH}/meta-rauc ]; then
            git clone https://github.com/rauc/meta-rauc.git -b ${BRANCH} ${BRANCH}/meta-rauc
          else
            cd ${BRANCH}/meta-rauc
            git pull origin ${BRANCH}
            cd ../..
          fi
      - name: Update repo meta-rauc-community
        run: |
          if [ ! -d ${BRANCH}/meta-rauc-community ]; then
            git clone https://github.com/rauc/meta-rauc-community.git -b ${BRANCH} ${BRANCH}/meta-rauc-community
          else
            cd ${BRANCH}/meta-rauc-community
            git pull origin ${BRANCH}
            cd ../..
          fi
          # custom wks file
          cp ci-cd/rauc/qemux86-grub-efi.wks ${BRANCH}/meta-rauc-community/meta-rauc-qemux86/wic/qemux86-grub-efi.wks
      
      - name: Extract RAUC keys
        run: |
          mkdir -p $GITHUB_WORKSPACE/rauc-ca
          echo "${{ secrets.RAUC_CA_CERT_BASE64 }}" | base64 -d > $GITHUB_WORKSPACE/rauc-ca/ca.cert.pem
          echo "${{ secrets.RAUC_DEV_CERT_BASE64 }}" | base64 -d > $GITHUB_WORKSPACE/rauc-ca/dev.cert
          echo "${{ secrets.RAUC_DEV_KEY_BASE64 }}" | base64 -d > $GITHUB_WORKSPACE/rauc-ca/dev.key
      
      - name: Configuring
        run: |

          DEBIAN_FRONTEND=noninteractive sudo -E apt-get install -y gettext-base

          rm -f ${BRANCH}/build/conf/local.conf
          rm -f ${BRANCH}/build/conf/bblayers.conf
          . ./${BRANCH}/poky/oe-init-build-env ${BRANCH}/build

          bitbake-layers add-layer $GITHUB_WORKSPACE/${BRANCH}/poky/meta
          bitbake-layers add-layer $GITHUB_WORKSPACE/${BRANCH}/poky/meta-poky
          bitbake-layers add-layer $GITHUB_WORKSPACE/${BRANCH}/poky/meta-yocto-bsp
          bitbake-layers add-layer $GITHUB_WORKSPACE/${BRANCH}/meta-openembedded/meta-oe
          bitbake-layers add-layer $GITHUB_WORKSPACE/${BRANCH}/meta-qbee/meta-qbee
          bitbake-layers add-layer $GITHUB_WORKSPACE/${BRANCH}//meta-rauc
          bitbake-layers add-layer $GITHUB_WORKSPACE/${BRANCH}//meta-rauc-community/meta-rauc-qemux86
          bitbake-layers add-layer $GITHUB_WORKSPACE/ci-cd/rauc/meta-mylayer

          envsubst < $GITHUB_WORKSPACE/ci-cd/rauc/local.conf.template > conf/local.conf

      - name: Building
        id: build
        run: |
          . ./${BRANCH}/poky/oe-init-build-env ${BRANCH}/build
          bitbake -k core-image-minimal
          bitbake -k qemu-demo-bundle

          image=$(readlink $GITHUB_WORKSPACE/tmp-glibc/deploy/images/qemu${ARCH}/core-image-minimal-qemu${ARCH}.wic)
          bundle=$(readlink $GITHUB_WORKSPACE/tmp-glibc/deploy/images/qemu${ARCH}/qemu-demo-bundle-qemu${ARCH}.raucb)
          echo "rauc_image=tmp-glibc/deploy/images/qemu${ARCH}/$image" >> "$GITHUB_OUTPUT"
          echo "rauc_bundle=tmp-glibc/deploy/images/qemu${ARCH}/$bundle" >> "$GITHUB_OUTPUT"
          echo "rauc_bundle_filename=$bundle" >> "$GITHUB_OUTPUT"

      - name: Autenticate with qbee.io
        uses: qbee-io/authenticate-action@v2
        with:
          login: "${{ secrets.QBEE_USER_RAUC }}"
          password: "${{ secrets.QBEE_PASSWORD_RAUC }}"
          api_host: "${{ secrets.QBEE_API_HOST }}"
  
      - name: Upload bundle to qbee.io
        uses: qbee-io/file-upload-action@v2
        with:
          source: ${{ steps.build.outputs.rauc_bundle }}
          destination: /ci-cd-rauc

      - name: Upload and commit qbee.io configuration
        uses: qbee-io/config-apply-action@v2
        with:
          file_path: ci-cd/rauc/rauc-config-template.json
          form_type: rauc
          node_id: ${{ secrets.QBEE_RAUC_NODE_ID }}
          commit_message: ${{ github.event.head_commit.message}}
          template_params: rauc_bundle=/ci-cd-rauc/${{ steps.build.outputs.rauc_bundle_filename }}